digraph "zeromem"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node1 [label="zeromem",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Zero a block of memory."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="_dsa_make_params",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__generate__pqg_8c.html#ad38793673d78a4d45177d5b839e1e16b",tooltip="Create DSA parameters (INTERNAL ONLY, not part of public API)"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="dsa_generate_pqg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__generate__pqg_8c.html#aa25c2f74420daea058431d3ad4b2340d",tooltip="Generate DSA parameters p, q & g."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="dsa_make_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__make__key_8c.html#a9b48ea999f1e23e839ae5b62aab985c6",tooltip="Old-style creation of a DSA key."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="_fortuna_reseed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#aad833baa2e75f93d847e5a7ac30ea4d2",tooltip=" "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="fortuna_ready",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#a635d034d99b51a38b4a71fae3880b48f",tooltip="Make the PRNG ready to read from."];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="fortuna_read",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#a19149fcfc926ab81d4acebfcf39b78f7",tooltip="Read from the PRNG."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="_ocb3_int_calc_offset_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__init_8c.html#ac90454e332f63cdeab4a6ab4c4b9ac25",tooltip=" "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="ocb3_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__init_8c.html#aa623e20f84ca5fe394f7bd209d4da177",tooltip="Initialize an OCB context."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="ocb3_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__decrypt__verify__memory_8c.html#aaa794cde472d6ae35c5d0cf68842860d",tooltip="Decrypt and compare the tag with OCB."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="ocb3_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__test_8c.html#afafd01785264b534d0ef8efb9fe530ef",tooltip="Test the OCB protocol."];
  Node9 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="ocb3_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__encrypt__authenticate__memory_8c.html#a4f2509ac5594dc6dcead8ac840a30b91",tooltip="Encrypt and generate an authentication code for a buffer of memory."];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="_pkcs_12_wrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pbes1_8c.html#a5ef636c0a0791cbb9e9f179bbf82f157",tooltip=" "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="_pkcs_5_alg1_common",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#aa4612634ecf7147a57dfe724150e059a",tooltip="Execute PKCS #5 v1 in strict or OpenSSL EVP_BytesToKey()-compat mode."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="pkcs_5_alg1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#ad4834c485adb4fc776af355582a96cb6",tooltip="Execute PKCS #5 v1 - Strict mode (no OpenSSL-compatible extension)"];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="_pkcs_5_alg1_wrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pbes1_8c.html#a24bb0a681a92f4c5c6b0b10b55bd825e",tooltip=" "];
  Node15 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="pkcs_5_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__test_8c.html#a1a78c0bca3595115dd9272c2026b607e",tooltip="PKCS #5 self-test."];
  Node14 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="pkcs_5_alg1_openssl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#ac6e1537b6861bbd16dff1469982277f1",tooltip="Execute PKCS #5 v1 - OpenSSL-extension-compatible mode."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="blake2b_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a0f0734cf05cdaa86e4658738c06653c2",tooltip="Terminate the hash to get the digest."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node20 [label="blake2b_160_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#ada54df5eb119d8d34e55c004c98fa1c5",tooltip="Self-test the hash."];
  Node19 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node21 [label="blake2b_256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a53be5fcfcd1910bf5aae5013563e396b",tooltip="Self-test the hash."];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node22 [label="blake2b_384_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a7e9931db13f3096dc2521ecc353539c4",tooltip="Self-test the hash."];
  Node19 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node23 [label="blake2b_512_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#ad2bd405cb693aaaef5ea8811859eddd0",tooltip="Self-test the hash."];
  Node19 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node24 [label="blake2bmac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac_8c.html#a9e287a6617ddcbeae84b0f486990aa11",tooltip="Terminate a BLAKE2B MAC session."];
  Node24 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node25 [label="blake2bmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac__file_8c.html#a372c957a4b186ee3a6f737eacfd0b9b3",tooltip="BLAKE2B MAC a file."];
  Node24 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node26 [label="blake2bmac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac__memory_8c.html#a77f61ab09e05bfd6b7953ec24b3f55c0",tooltip="BLAKE2B MAC a block of memory to produce the authentication tag."];
  Node24 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node27 [label="blake2bmac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac__memory__multi_8c.html#aec804c047997d283f5b0d8ec8b8c20c0",tooltip="BLAKE2B MAC multiple blocks of memory to produce the authentication tag."];
  Node24 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node28 [label="blake2bmac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac__test_8c.html#ad73d93774d527ef21c4fa0da9bafbb60",tooltip=" "];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node29 [label="blake2b_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a1f07c7dccb6eb40dfd3c86314c103174",tooltip="Initialize the hash/MAC state."];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node30 [label="blake2b_160_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a052af9541a8f79e9217d996de94b1b8a",tooltip="Initialize the hash state."];
  Node30 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node29 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node31 [label="blake2b_256_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#ae4b7d7f4c73a528fc5a3ebcec766025b",tooltip="Initialize the hash state."];
  Node31 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node29 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node32 [label="blake2b_384_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#a95985494dcd2c6b0106b3f15499ccf42",tooltip="Initialize the hash state."];
  Node32 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node29 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node33 [label="blake2b_512_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2b_8c.html#adb0897fdd5dee9830adcb23b19ebe0f1",tooltip="Initialize the hash state."];
  Node33 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node29 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node34 [label="blake2bmac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac_8c.html#af04b5fc328376e2434cdff29e2beae41",tooltip="Initialize an BLAKE2B MAC context."];
  Node34 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node34 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node34 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node34 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node35 [label="blake2s_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a951f967f191626d78ef0c4202dceac46",tooltip="Terminate the hash to get the digest."];
  Node35 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node36 [label="blake2s_128_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a35ad837b8eb060d5ada9e83aa4fc05e1",tooltip="Self-test the hash."];
  Node35 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node37 [label="blake2s_160_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a547bd6f8ec7604f9482ca05d52de1d53",tooltip="Self-test the hash."];
  Node35 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node38 [label="blake2s_224_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#ab0d7984b339f968398dc6b63fb3732f5",tooltip="Self-test the hash."];
  Node35 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node39 [label="blake2s_256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a89560ab6554753baea0950372744f02e",tooltip="Self-test the hash."];
  Node35 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node40 [label="blake2smac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac_8c.html#af268b3c5222438337934ed26be851579",tooltip="Terminate a BLAKE2S MAC session."];
  Node40 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node41 [label="blake2smac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac__file_8c.html#abc529c6de44b41397be3a1d166d9a7ba",tooltip="BLAKE2S MAC a file."];
  Node40 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node42 [label="blake2smac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac__memory_8c.html#aea1e8633862804ea1944985b7c5f17d8",tooltip="BLAKE2S MAC a block of memory to produce the authentication tag."];
  Node40 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node43 [label="blake2smac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac__memory__multi_8c.html#a535ad0f9c023812c0651cd566912d958",tooltip="BLAKE2S MAC multiple blocks of memory to produce the authentication tag."];
  Node40 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node44 [label="blake2smac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac__test_8c.html#a42d2cb7bf53a66b206aef3ba1a889173",tooltip=" "];
  Node1 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node45 [label="blake2s_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a93c803f6354c661107d65ddc22cfc77f",tooltip="Initialize the hash/MAC state."];
  Node45 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node46 [label="blake2s_128_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a3ffef0e3850163c769ac81d187d880db",tooltip="Initialize the hash state."];
  Node46 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node45 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node47 [label="blake2s_160_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#ad1196cb2fa2a712bb4863d6718782e11",tooltip="Initialize the hash state."];
  Node47 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node45 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node48 [label="blake2s_224_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#a39d88962176ad783d902a6c4f569b1fe",tooltip="Initialize the hash state."];
  Node48 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node45 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node49 [label="blake2s_256_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2s_8c.html#aeed065e85d4d9ad6ef1f785da9dcb06f",tooltip="Initialize the hash state."];
  Node49 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node45 -> Node50 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node50 [label="blake2smac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac_8c.html#ac5b0577823c5740bc16b658ba4dbfd02",tooltip="Initialize an BLAKE2S MAC context."];
  Node50 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node50 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node50 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node50 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node51 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node51 [label="blowfish_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blowfish_8c.html#ac8a23f85314c81754968f73579542d8b",tooltip="Initialize the Blowfish block cipher."];
  Node51 -> Node52 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node52 [label="blowfish_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blowfish_8c.html#a7e2b92d43b125cabdf319becaf99f201",tooltip="Performs a self-test of the Blowfish block cipher."];
  Node1 -> Node53 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node53 [label="burn_stack",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$burn__stack_8c.html#aea4187c8bba7b6cd9a358041089680ac",tooltip="Burn some stack memory."];
  Node53 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node54 [label="idea_ecb_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$idea_8c.html#add641467cf266ad9baf4869eb2c9aa5c",tooltip=" "];
  Node54 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node55 [label="idea_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$idea_8c.html#ad92e9322772754b8d6f1d62d093ed022",tooltip=" "];
  Node53 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node56 [label="idea_ecb_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$idea_8c.html#aa107ed890451e182e4b97a8316227f03",tooltip=" "];
  Node56 -> Node55 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node53 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node57 [label="serpent_ecb_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$serpent_8c.html#a46de2073180230ec624b901f27572557",tooltip=" "];
  Node57 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node58 [label="serpent_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$serpent_8c.html#ace09100764d8412de97886d82f794e03",tooltip=" "];
  Node53 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node59 [label="serpent_ecb_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$serpent_8c.html#ab8c192997dc75850afe136b72d39a0f2",tooltip=" "];
  Node59 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node53 -> Node60 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node60 [label="serpent_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$serpent_8c.html#a760fbf5d7d4d33e3f3510e372b1d8630",tooltip=" "];
  Node60 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node61 [label="camellia_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$camellia_8c.html#a2af9ab6e44a83ed8fa753deece2c6749",tooltip=" "];
  Node1 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node62 [label="cast5_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cast5_8c.html#aa76a3eb67caeddcfdc467a5d3fde9f1a",tooltip="Initialize the LTC_CAST5 block cipher."];
  Node62 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node63 [label="cast5_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$cast5_8c.html#a43713a874b3ac6a93bbeed5dd301f455",tooltip="Performs a self-test of the LTC_CAST5 block cipher."];
  Node1 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node64 [label="ccm_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ccm__memory_8c.html#acdd7923e6aee8984662ed5000dc2d7fe",tooltip="CCM encrypt/decrypt and produce an authentication tag."];
  Node64 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node65 [label="ccm_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ccm__test_8c.html#af02fbfac6da1b71a49ad14537796b006",tooltip=" "];
  Node1 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node66 [label="ccm_reset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ccm__reset_8c.html#abac05743e99552a3d1591e728b6fe034",tooltip="Reset a CCM state to as if you just called ccm_init()."];
  Node1 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node67 [label="chacha20_prng_add_entropy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chacha20_8c.html#ae75ffa7e5ccf945ae352f106fb3b3f13",tooltip="Add entropy to the PRNG state."];
  Node67 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node68 [label="chacha20_prng_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chacha20_8c.html#aec1d8ebf9e796fe1223995e48d665a92",tooltip="Import a PRNG state."];
  Node68 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node69 [label="chacha20_prng_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chacha20_8c.html#a1c178a6f1b7255371d3340913c29b64a",tooltip="PRNG self-test."];
  Node67 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node70 [label="chacha20poly1305_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chacha20poly1305__memory_8c.html#a1ad9f37fe4a4ac32fad1a1ab97f99d30",tooltip="Process an entire GCM packet in one call."];
  Node70 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node71 [label="chacha20poly1305_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chacha20poly1305__test_8c.html#a3ed16a3fd7fc440bc9137936ddb99793",tooltip=" "];
  Node1 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node72 [label="chc_compress",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#ab3ddd709c120ad803c832dd2660dc650",tooltip=" "];
  Node72 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node73 [label="chc_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#a6c643b9e5929a5ce3426410fd4eceb59",tooltip="Terminate the hash to get the digest."];
  Node73 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node74 [label="chc_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#a1467e832993ba079f27160687745fdcd",tooltip="Self-test the hash."];
  Node1 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node75 [label="chc_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#aa2b49244a7f42e648b80c07e443b31c7",tooltip="Initialize the hash state."];
  Node75 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node76 [label="der_encode_setof",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__encode__setof_8c.html#a5187d93224e9b002d4e7db8c7d721339",tooltip="Encode a SETOF stucture."];
  Node76 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node77 [label="der_encode_custom_type",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__encode__custom__type_8c.html#a20c801e1d73f944c7f43acc2228211b2",tooltip="Encode a Custom Type."];
  Node77 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node78 [label="der_encode_sequence_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__encode__sequence__ex_8c.html#af435bfc378dd9f42af2a211c0fe1aced",tooltip="Encode a SEQUENCE."];
  Node78 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node78 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node79 [label="der_encode_set",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__encode__set_8c.html#a4aa04a42171146d2f510e41b84dd72f1",tooltip=" "];
  Node79 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node79 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node78 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node76 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node80 [label="dh_generate_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dh__generate__key_8c.html#ab1d01a4bd250336b21aff7a863d785de",tooltip=" "];
  Node1 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node81 [label="dsa_decrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__decrypt__key_8c.html#a6f80d854fbdd56020ea641c4e4e47a4c",tooltip="Decrypt an DSA encrypted key."];
  Node1 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node82 [label="dsa_encrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__encrypt__key_8c.html#ab65138d407e0660f6f2f7cb7e7dcb24b",tooltip="Encrypt a symmetric key with DSA."];
  Node1 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node83 [label="dsa_shared_secret",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__shared__secret_8c.html#a7fa65ac53b86490d87a71daaaaca89fe",tooltip="Create a DSA shared secret between two keys."];
  Node83 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node83 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node84 [label="dsa_sign_hash_raw",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__sign__hash_8c.html#a1073fec547694360cd9f2a3d81c7260a",tooltip="Sign a hash with DSA."];
  Node84 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node85 [label="dsa_sign_hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__sign__hash_8c.html#a83c6d4c1243acbc906e872e20de3bba2",tooltip="Sign a hash with DSA."];
  Node1 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node86 [label="eax_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__decrypt__verify__memory_8c.html#ab4d3f7a8561cc2cbce16949a1ee0d00c",tooltip="Decrypt a block of memory and verify the provided MAC tag with EAX."];
  Node86 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node87 [label="eax_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__test_8c.html#a9e708c531b1c375a3d086f43a192c455",tooltip="Test the EAX implementation."];
  Node1 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node88 [label="eax_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__done_8c.html#ad8e287fe7144dae9e4eac1e755d973cf",tooltip="Terminate an EAX session and get the tag."];
  Node88 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node88 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node89 [label="eax_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__encrypt__authenticate__memory_8c.html#ae398a749e5591537487ab93b4a9fec24",tooltip="EAX encrypt and produce an authentication tag."];
  Node89 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node90 [label="eax_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__init_8c.html#ac35fd0cc9f76c2e8052efb3c22f1559c",tooltip="Initialized an EAX state."];
  Node90 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node90 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node91 [label="ecc_decrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__decrypt__key_8c.html#adfbc21632ec24dad838fa0700154a57d",tooltip="Decrypt an ECC encrypted key."];
  Node1 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node92 [label="ecc_encrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__encrypt__key_8c.html#a16164f1e295b1c88e6b81a9ece26cd70",tooltip="Encrypt a symmetric key with ECC."];
  Node1 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node93 [label="ecc_get_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__get__key_8c.html#a0e02195ff24ed2e20bac2f2aa97ba487",tooltip="Export raw public or private key (public keys = ANS X9.63 compressed or uncompressed; private keys = ..."];
  Node93 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node94 [label="ecc_ansi_x963_export",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__ansi__x963__export_8c.html#a75a6a5511113a7f4c77b7d5462806c3d",tooltip="ECC X9.63 (Sec."];
  Node93 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node95 [label="ecc_shared_secret",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__shared__secret_8c.html#aca2bced5e25b262ad6fdafe15f5ea784",tooltip="Create an ECC shared secret between two keys."];
  Node95 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node95 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node96 [label="ecc_sign_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__sign__hash_8c.html#a96afaf55b03386145e3061fc42a9636b",tooltip="Sign a message digest."];
  Node1 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node97 [label="f8_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f8__encrypt_8c.html#ab9fd6d99b51ca455636ab5c46fd057e3",tooltip="F8 encrypt."];
  Node97 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node98 [label="f8_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f8__decrypt_8c.html#a38caf267aa4f5dddbc5cb36d230b5238",tooltip="F8 decrypt."];
  Node97 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node99 [label="f8_test_mode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f8__test__mode_8c.html#ad65a1bfd03de46011299df002fd60d33",tooltip=" "];
  Node1 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node100 [label="f8_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f8__start_8c.html#a99e5ee7a6073e8097187ac64bfb6f039",tooltip="Initialize an F8 context."];
  Node100 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node101 [label="f9_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__done_8c.html#a4ddef8a69a1679483d24bce59382fc49",tooltip="Terminate the f9-MAC state."];
  Node101 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node102 [label="f9_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__file_8c.html#a4c1ea12d1c638f066c93908a118ec404",tooltip="f9 a file"];
  Node101 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node103 [label="f9_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__memory_8c.html#a8d8a8a7f9014e8b36484d2c992e9eb10",tooltip="f9-MAC a block of memory"];
  Node103 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node104 [label="f9_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__test_8c.html#a4457afc1800916455c35efd9b1acd142",tooltip="Test f9-MAC mode Return CRYPT_OK on succes."];
  Node101 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node105 [label="f9_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__memory__multi_8c.html#a6d3cc7c6511a0e33997084a56a7f191f",tooltip="f9 multiple blocks of memory"];
  Node1 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node106 [label="f9_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__init_8c.html#af0036ae18213e2a0405bc02f5920267e",tooltip="Initialize F9-MAC state."];
  Node106 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node106 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node106 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node107 [label="fortuna_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#ab875173ff3316ba29598b7fb3b03f186",tooltip="Terminate the PRNG."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node108 [label="fortuna_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#a54822f5e172e6f2a025448f6e9430e22",tooltip="Start the PRNG."];
  Node108 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node109 [label="fortuna_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#ad9f529aaecf6646cac5e5eaa2d1f418d",tooltip="Import a PRNG state."];
  Node1 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node110 [label="fortuna_update_seed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#a8a0df3516c28ad940932db01cfa194f9",tooltip="\"Update Seed File\"-compliant update of K"];
  Node110 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node111 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node111 [label="gcm_add_aad",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__add__aad_8c.html#ab9e6297b575f465e9fac3846f22a2bbd",tooltip="Add AAD to the GCM state."];
  Node111 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node112 [label="gcm_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__done_8c.html#a802604cf97f0f3103881fc43bdc060f3",tooltip="Terminate a GCM stream."];
  Node112 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node113 [label="gcm_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__memory_8c.html#a43d9862e1013606d01bab2c57fef74f5",tooltip="Process an entire GCM packet in one call."];
  Node113 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node114 [label="gcm_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__test_8c.html#ae36c8eb6c2964df7e386f5f73bded5e7",tooltip="Test the GCM code."];
  Node112 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node111 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node111 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node115 [label="gcm_process",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__process_8c.html#a9de6ff96ed00a8296355d52b9a2e1ba0",tooltip="Process plaintext/ciphertext through GCM."];
  Node115 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node115 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node116 [label="gcm_gf_mult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__gf__mult_8c.html#af64448959cfcae8b0a774822f2219f47",tooltip="GCM GF multiplier (internal use only) bitserial."];
  Node116 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node117 [label="gcm_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__init_8c.html#aa8fa50bfa0ec8b07b363dbe7cbab7339",tooltip="Initialize a GCM state."];
  Node117 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node117 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node116 -> Node118 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node118 [label="gcm_mult_h",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__mult__h_8c.html#a198e51a3d6b56455cc781d140ebd6f6d",tooltip="GCM multiply by H."];
  Node118 -> Node111 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node118 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node119 [label="gcm_add_iv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__add__iv_8c.html#a05c018a26305857461c773ce2e458fc5",tooltip="Add IV data to the GCM state."];
  Node119 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node119 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node118 -> Node112 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node118 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node116 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node120 [label="lrw_process",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__process_8c.html#a6f5de9c91139715030145308a447204a",tooltip="Process blocks with LRW, since decrypt/encrypt are largely the same they share this code."];
  Node120 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node121 [label="lrw_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__decrypt_8c.html#ab12400c46f12f2725a1b9ea9ef9879e6",tooltip="LRW decrypt blocks."];
  Node121 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node122 [label="lrw_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__test_8c.html#af231a49d74f9fa4e43f5fd68439979c3",tooltip="Test LRW against specs."];
  Node120 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node123 [label="lrw_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__encrypt_8c.html#a5bc5a7a6312a63b6c590139f152ca177",tooltip="LRW encrypt blocks."];
  Node123 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node116 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node124 [label="lrw_setiv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__setiv_8c.html#a68082c7057772abce580c72a12eb4f79",tooltip="Set the IV for LRW."];
  Node124 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node125 [label="lrw_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$lrw__start_8c.html#a85f429f1430c834c58e4f5cfe75fe12f",tooltip="Initialize the LRW context."];
  Node125 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node124 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node116 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node126 [label="gcm_reset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__reset_8c.html#ae9124ba3812a14ea2c06fe83f169b242",tooltip="Reset a GCM state to as if you just called gcm_init()."];
  Node1 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node127 [label="hash_filehandle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a55d0344508460fbde2c17fe9ef2aa838",tooltip="Hash data from an open file handle."];
  Node127 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node128 [label="hash_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a6107c14266137a8f7834e4318d8d5002",tooltip=" "];
  Node1 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 [label="hash_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a8672bf28488595ef1519a6754498869c",tooltip="Hash a block of memory and store the digest."];
  Node129 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node130 [label="hmac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__init_8c.html#a84fb451315a01f33d356ddd1ade0dca9",tooltip="Initialize an HMAC context."];
  Node130 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node131 [label="hmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__file_8c.html#a61c2b2aeca9a287224c20e7fceff11cd",tooltip="HMAC a file."];
  Node130 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node132 [label="hmac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__memory_8c.html#a6bf2dff4537e6332dec46266a9db7580",tooltip="HMAC a block of memory to produce the authentication tag."];
  Node132 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node133 [label="hkdf_expand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hkdf_8c.html#a1fa3c2a1e44fc629a059ae5c61cc0197",tooltip=" "];
  Node133 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node134 [label="hkdf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$hkdf_8c.html#ac79c8ae04bc15c69e9704277e38d22be",tooltip=" "];
  Node132 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node136 [label="hkdf_extract",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hkdf_8c.html#a6af77e2823d3b6e691098963b07ea26a",tooltip=" "];
  Node136 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node132 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node137 [label="hmac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__test_8c.html#af43c4e10ec1984cf428cf69cd3184e53",tooltip="HMAC self-test."];
  Node132 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node138 [label="pkcs_5_alg2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__2_8c.html#a738b05376774b9a5b311a59ec73966f0",tooltip="Execute PKCS #5 v2."];
  Node138 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node130 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node139 [label="hmac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__memory__multi_8c.html#a42b0c424c7e01653550dc7d9ac3bb4b9",tooltip="HMAC multiple blocks of memory to produce the authentication tag."];
  Node130 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node140 [label="pkcs12_kdf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs12__kdf_8c.html#a362c9fba9251fa6d35445f4ccae24fe8",tooltip=" "];
  Node140 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node129 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node141 [label="pkcs_1_oaep_decode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__oaep__decode_8c.html#ab51588072c388a0deb0e0a2086b226f7",tooltip="PKCS #1 v2.00 OAEP decode."];
  Node141 -> Node142 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node142 [label="rsa_decrypt_key_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__decrypt__key_8c.html#a9d043dc2d91a5ca83f64a4210b03f5d1",tooltip="PKCS #1 decrypt then v1.5 or OAEP depad."];
  Node129 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node143 [label="pkcs_1_oaep_encode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__oaep__encode_8c.html#a503852f9d2f39632d8a09117c19afe8b",tooltip="PKCS #1 v2.00 OAEP encode."];
  Node143 -> Node144 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node144 [label="rsa_encrypt_key_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__encrypt__key_8c.html#af3112ec74c217e4bbd5e9609bc83393f",tooltip="(PKCS #1 v2.0) OAEP pad then encrypt"];
  Node1 -> Node145 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node145 [label="hash_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a85566393d0f13710bafc9501361eff06",tooltip="Hash multiple (non-adjacent) blocks of memory at once."];
  Node145 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node146 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node146 [label="hmac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__done_8c.html#a25eaf3db04e6464adbba95d1153885d3",tooltip="Terminate an HMAC session."];
  Node146 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node146 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node146 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node146 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node147 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node147 [label="ltc_ecc_export_point",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ltc__ecc__export__point_8c.html#ae647d3ad2082ac1e6fc81e857c5922b4",tooltip=" "];
  Node147 -> Node148 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node148 [label="ecc_export_openssl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__export__openssl_8c.html#ab5c65063bc8916dc0d87a77bdecbc626",tooltip="Export an ECC key as a binary packet."];
  Node147 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node149 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node149 [label="ltc_ecc_mul2add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ltc__ecc__mul2add_8c.html#a4aaa757939c4f4b54a3db21afc6aef9f",tooltip="Computes kA*A + kB*B = C using Shamir's Trick."];
  Node1 -> Node150 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node150 [label="md2_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md2_8c.html#a4bd9b171ae5fd817c88abd1050924e83",tooltip="Terminate the hash to get the digest."];
  Node150 -> Node151 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node151 [label="md2_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md2_8c.html#a19f63336fd915d311a395eec0426a46b",tooltip="Self-test the hash."];
  Node1 -> Node152 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node152 [label="md2_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md2_8c.html#a6fe90cffa940e6c644f94b60ce2a0208",tooltip="Initialize the hash state."];
  Node152 -> Node151 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node153 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node153 [label="md4_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md4_8c.html#afb9dc3e903f632578a64b0a7d58e73e9",tooltip="Terminate the hash to get the digest."];
  Node153 -> Node154 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node154 [label="md4_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md4_8c.html#ad61aadd48a53652bc8063afad9a9ae56",tooltip="Self-test the hash."];
  Node1 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node155 [label="md5_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md5_8c.html#aee76a4c9f37bfe88d943301f3fa8126f",tooltip="Terminate the hash to get the digest."];
  Node155 -> Node156 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node156 [label="md5_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$md5_8c.html#aa489642a9ce4699bc79abfef98a7afa3",tooltip="Self-test the hash."];
  Node1 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node157 [label="multi2_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$multi2_8c.html#a81011180b7f45ba07b0f1b7f759e6d02",tooltip=" "];
  Node157 -> Node158 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node158 [label="multi2_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$multi2_8c.html#aab1e868d611655e77b28eabddabb84f1",tooltip="Performs a self-test of the multi2 block cipher."];
  Node1 -> Node159 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node159 [label="noekeon_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$noekeon_8c.html#a977265eaaa063768bc843deceaf9e3c9",tooltip="Performs a self-test of the Noekeon block cipher."];
  Node1 -> Node160 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node160 [label="ocb3_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__decrypt_8c.html#a1e05e1d91257a5f3e7d94913cd5db9ab",tooltip="Decrypt blocks of ciphertext with OCB."];
  Node160 -> Node161 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node161 [label="ocb3_decrypt_last",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__decrypt__last_8c.html#a4aa4fd093bfe61fab5f6fa87bcf98713",tooltip="Finish an OCB (decryption) stream."];
  Node161 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node161 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node160 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node161 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node162 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node162 [label="ocb3_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__done_8c.html#aeec4c3c1decbfde2980246d568c43b1f",tooltip="Finish OCB processing and compute the tag."];
  Node162 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node162 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node162 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node163 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node163 [label="ocb3_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__encrypt_8c.html#a0e9e87fe853d64959bd70533d1952bfa",tooltip="Encrypt blocks of data with OCB."];
  Node163 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node164 [label="ocb3_encrypt_last",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__encrypt__last_8c.html#a7059d3b0e1618f0f4dd88b6314830ba6",tooltip="Finish an OCB (encryption) stream."];
  Node164 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node164 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node163 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node165 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node165 [label="ocb_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__decrypt_8c.html#aeaa8219f1336e85eff7fba017ea1d6ef",tooltip="Decrypt a block with OCB."];
  Node165 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node166 [label="ocb_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__decrypt__verify__memory_8c.html#a54a8c51becc57a9eded7c6da4479ac10",tooltip="Decrypt and compare the tag with OCB."];
  Node166 -> Node167 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node167 [label="ocb_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__test_8c.html#afbc7c6139aaabac9146afff688bafbb9",tooltip="Test the OCB protocol."];
  Node1 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node168 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node168 [label="ocb_done_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__done__decrypt_8c.html#a9f8c7f1d6dd8025f8b4375841707a096",tooltip="Terminate a decrypting OCB state."];
  Node168 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node169 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node169 [label="ocb_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__encrypt_8c.html#a5b4272f3b7881406e40a13ec05ce5aa2",tooltip="Encrypt a block of data with OCB."];
  Node169 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node170 [label="ocb_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__encrypt__authenticate__memory_8c.html#a6dc818f74acf81f66cd2f25b5f0024b6",tooltip="Encrypt and generate an authentication code for a buffer of memory."];
  Node170 -> Node167 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node171 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node171 [label="ocb_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__init_8c.html#a3c0eb0dbcf72f41b0455237adc8d967b",tooltip="Initialize an OCB context."];
  Node171 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node171 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node172 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node172 [label="omac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__done_8c.html#a5dbac1c7d2abe27fa4a3523f65289525",tooltip="Terminate an OMAC stream."];
  Node172 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node172 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node172 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node173 [label="omac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__file_8c.html#ae07518003313f8328d564265c4d0c8d4",tooltip="OMAC a file."];
  Node172 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node174 [label="omac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__memory_8c.html#a22ca5d123fefe8922e9491f5a0e122a2",tooltip="OMAC a block of memory."];
  Node174 -> Node175 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node175 [label="omac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__test_8c.html#abdcfbca1800d6a3b577b7c6ec0838a48",tooltip="Test the OMAC setup."];
  Node172 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node176 [label="omac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__memory__multi_8c.html#a85ff42c47901f5e541ab842f92e09895",tooltip="OMAC multiple blocks of memory."];
  Node1 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node177 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node177 [label="omac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__init_8c.html#a54f34070eb08f0037eb0efab37207794",tooltip="Initialize an OMAC state."];
  Node177 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node177 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node177 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node177 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node176 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node178 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node178 [label="pbes_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pbes_8c.html#a7df0f8ba7d5d6b9752a7bb9c5e3f7081",tooltip="Decrypt Data encrypted via either PBES1 or PBES2."];
  Node178 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node179 [label="pkcs8_decode_flexi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs8__decode__flexi_8c.html#a1b0d8fcf234d94638b2554ccea725003",tooltip="PKCS#8 decrypt if necessary & flexi-decode."];
  Node179 -> Node180 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node180 [label="ecc_import_pkcs8",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__import__pkcs8_8c.html#a0f0e747f119685eee3cc412f4480c52e",tooltip=" "];
  Node179 -> Node181 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node181 [label="rsa_import_pkcs8",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__import__pkcs8_8c.html#a3d44c6233a326316f7fb01c9d834fad4",tooltip="Import an RSAPublicKey or RSAPrivateKey in PKCS#8 format."];
  Node1 -> Node182 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node182 [label="pelican_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pelican_8c.html#a0e62b20609006626506ac50406906920",tooltip="Initialize a Pelican state."];
  Node182 -> Node183 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node183 [label="pelican_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pelican__memory_8c.html#a1c9283f981146b34e1f61fd18840d6f7",tooltip="Pelican block of memory."];
  Node182 -> Node184 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node184 [label="pelican_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pelican__test_8c.html#aa17b4cc1ebf25aa8011e9abce289629c",tooltip=" "];
  Node1 -> Node140 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node185 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node185 [label="pkcs_1_i2osp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__i2osp_8c.html#a7980b8fdbeaea9f05043d61e7ca019ff",tooltip="PKCS #1 Integer to binary."];
  Node1 -> Node186 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node186 [label="pkcs_1_mgf1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__mgf1_8c.html#a5b7fcf55a6c826c06e0e99f59ef2c6f8",tooltip="Perform PKCS #1 MGF1 (internal)"];
  Node186 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node186 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node186 -> Node187 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node187 [label="pkcs_1_pss_decode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__pss__decode_8c.html#a6aeacecd6b979acc2da875337f08eacc",tooltip="PKCS #1 v2.00 PSS decode."];
  Node187 -> Node188 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node188 [label="rsa_verify_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__verify__hash_8c.html#af3e9ec6fff93de785cd2528f5b295ca2",tooltip="PKCS #1 de-sign then v1.5 or PSS depad."];
  Node186 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node189 [label="pkcs_1_pss_encode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__pss__encode_8c.html#abdc082e173b453ec37edabbc8f69aa39",tooltip="PKCS #1 v2.00 Signature Encoding."];
  Node189 -> Node190 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node190 [label="rsa_sign_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__sign__hash_8c.html#a7a07f13dda380b3a3545a07047195ecd",tooltip="PKCS #1 pad then sign."];
  Node1 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node143 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node187 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node189 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node191 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node191 [label="pmac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__done_8c.html#a28451cb8ae23f8bed3a577b101aac5a0",tooltip=" "];
  Node191 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node192 [label="pmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__file_8c.html#ad75fb94bd003732c44d943868d583547",tooltip="PMAC a file."];
  Node191 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node193 [label="pmac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__memory_8c.html#ac738727243b64548af367c19dfee535c",tooltip="PMAC a block of memory."];
  Node193 -> Node194 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node194 [label="pmac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__test_8c.html#a25c3fac912755621e400e5b51f46ca23",tooltip="Test the LTC_OMAC implementation."];
  Node191 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node195 [label="pmac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__memory__multi_8c.html#a1de02e9aa8851625d40265b30c639369",tooltip="PMAC multiple blocks of memory."];
  Node1 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node196 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node196 [label="pmac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__init_8c.html#a2cc36e2064ee6f365143f6f51083de9a",tooltip="Initialize a PMAC state."];
  Node196 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node196 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node196 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node197 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node197 [label="pmac_process",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__process_8c.html#a85d97f77425bf5e1ce9a8f9bb1aab059",tooltip="Process data in a PMAC stream."];
  Node197 -> Node192 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node197 -> Node193 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node197 -> Node195 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node198 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node198 [label="poly1305_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$poly1305__file_8c.html#aca704db89279fb2fbe2998b5c7fbf9d4",tooltip="POLY1305 a file."];
  Node1 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node199 [label="poly1305_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$poly1305__memory_8c.html#a47a72f0367bb1f1fc7127c17cbc3f608",tooltip="POLY1305 a block of memory to produce the authentication tag."];
  Node1 -> Node200 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node200 [label="poly1305_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$poly1305__memory__multi_8c.html#a6cb8a0f7f61b0494d7f024c162683980",tooltip="POLY1305 multiple blocks of memory to produce the authentication tag."];
  Node1 -> Node201 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node201 [label="rabbit_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rabbit_8c.html#a931b3a1f3f35366a90bc7c7b994cac92",tooltip=" "];
  Node201 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node202 [label="rabbit_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rabbit_8c.html#ab40e398f9527a72a8ae06d7ceb310fe0",tooltip=" "];
  Node201 -> Node203 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node203 [label="rabbit_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rabbit__memory_8c.html#a10314f2825525c0c69881907d65ab91b",tooltip="Encrypt (or decrypt) bytes of ciphertext (or plaintext) with Rabbit."];
  Node203 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node204 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node204 [label="rabbit_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rabbit_8c.html#ac522e3bb890d2fe32276a4a596371461",tooltip=" "];
  Node204 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node204 -> Node203 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node205 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node205 [label="rand_bn_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rand__bn_8c.html#a5a58a92a44e093e5b35960f7b92a6eb9",tooltip="Generate a random number N with given bitlength (note: MSB can be 0)"];
  Node205 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node205 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node205 -> Node206 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node206 [label="rand_bn_upto",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rand__bn_8c.html#a8050acf530841fb2da3b667204039856",tooltip="Generate a random number N in a range: 1 <= N < limit."];
  Node206 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node206 -> Node207 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node207 [label="dsa_generate_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__generate__key_8c.html#a97b1aaf6fd598e3ea9d82523614158c9",tooltip="Create a DSA key."];
  Node207 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node206 -> Node208 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node208 [label="ecc_generate_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__make__key_8c.html#a127706e1e535a3c06a1938e474ed8d20",tooltip=" "];
  Node208 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node208 -> Node209 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node209 [label="ecc_make_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__make__key_8c.html#a7a315bba6da1275feab6ca1c5a16e87a",tooltip="Make a new ECC key."];
  Node208 -> Node210 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node210 [label="ecc_make_key_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__make__key_8c.html#aa162146ab36462700056738f96b2dfcb",tooltip=" "];
  Node208 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node206 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node211 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node211 [label="rand_prime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rand__prime_8c.html#a756aed6a613ea5a005bb97a4de155622",tooltip=" "];
  Node211 -> Node212 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node212 [label="rsa_make_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__make__key_8c.html#aece58b13922a56a3fbcce677333dad9a",tooltip="Create an RSA key."];
  Node1 -> Node213 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node213 [label="rc2_setup_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc2_8c.html#a972f755861aeda91edb3d961881db3ea",tooltip="Initialize the RC2 block cipher."];
  Node213 -> Node214 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node214 [label="rc2_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc2_8c.html#a3d992548480d21ad0d23dac89c4c2ccf",tooltip="Initialize the RC2 block cipher."];
  Node214 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node215 [label="rc2_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc2_8c.html#a6263c717b1805331d7b96b4751332def",tooltip="Performs a self-test of the RC2 block cipher."];
  Node213 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node215 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node216 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node216 [label="rc4_add_entropy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc4_8c.html#a4f610c15f71bd7133905ba8c42b25085",tooltip="Add entropy to the PRNG state."];
  Node216 -> Node217 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node217 [label="rc4_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc4_8c.html#ad11a03b9a6aabff43cb59d46d1eef7ce",tooltip="Import a PRNG state."];
  Node217 -> Node218 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node218 [label="rc4_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rc4_8c.html#ad8af7083fd45b4c39ec2720455518560",tooltip="PRNG self-test."];
  Node216 -> Node218 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node219 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node219 [label="rijndael_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$aes_8c.html#a787877f61031ca3855283ee7755f1b46",tooltip="Performs a self-test of the AES block cipher."];
  Node219 -> Node220 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node220 [label="fortuna_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$fortuna_8c.html#a02a8621eda36a40059ce155007b6f6c3",tooltip="PRNG self-test."];
  Node1 -> Node221 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node221 [label="rmd128_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd128_8c.html#a992507f4cf10e857d1bbb531855043a9",tooltip="Terminate the hash to get the digest."];
  Node221 -> Node222 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node222 [label="rmd128_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd128_8c.html#aa5ff888d315ec47dde1dcc6723635754",tooltip="Self-test the hash."];
  Node1 -> Node223 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node223 [label="rmd160_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd160_8c.html#ab062736718e66cfab4b0c41c20165657",tooltip="Terminate the hash to get the digest."];
  Node223 -> Node224 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node224 [label="rmd160_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd160_8c.html#a580a40d8b0a8aadf14607d7de3428ae0",tooltip="Self-test the hash."];
  Node1 -> Node225 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node225 [label="rmd256_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd256_8c.html#a3010e302d495c08706fd06789d563705",tooltip="Terminate the hash to get the digest."];
  Node225 -> Node226 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node226 [label="rmd256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd256_8c.html#a5f04ba52292e7e88dd6f4d32bebf796e",tooltip="Self-test the hash."];
  Node1 -> Node227 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node227 [label="rmd320_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd320_8c.html#a7dab0391a8e77bb9c3094088d634ea3a",tooltip="Terminate the hash to get the digest."];
  Node227 -> Node228 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node228 [label="rmd320_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rmd320_8c.html#ae7fa86511a89154467c5b08feb0a222c",tooltip="Self-test the hash."];
  Node1 -> Node229 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node229 [label="rng_make_prng",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rng__make__prng_8c.html#a97e605483ea5f5f9ea4067dafae5801b",tooltip="Create a PRNG from a RNG."];
  Node1 -> Node230 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node230 [label="rsa_exptmod",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__exptmod_8c.html#aa8a21c10109acef2c43451d085e1e8a0",tooltip="Compute an RSA modular exponentiation."];
  Node1 -> Node188 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node231 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node231 [label="s_ocb_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$s__ocb__done_8c.html#a0e6dd21746be44a0949d16b9e1ac796d",tooltip="Shared code to finish an OCB stream."];
  Node231 -> Node168 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node231 -> Node232 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node232 [label="ocb_done_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__done__encrypt_8c.html#aab90ede8c55c4f4a167a26dd2095556e",tooltip="Terminate an encryption OCB state."];
  Node232 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node233 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node233 [label="Safer_Expand_Userkey",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a098e5a50fc26c3eec876458f84eeca97",tooltip=" "];
  Node233 -> Node234 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node234 [label="safer_k128_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a8f7502a1821ef98fb2f9e471ea52dbec",tooltip=" "];
  Node233 -> Node235 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node235 [label="safer_k64_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a61b8f198fe22bd907529f06d9d05d61e",tooltip=" "];
  Node235 -> Node236 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node236 [label="safer_k64_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a10abcebaccdee9d23379b01fbd4f1bce",tooltip=" "];
  Node233 -> Node237 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node237 [label="safer_sk128_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a0ff0e9ec8b8e5d1725d1e1178d340ce6",tooltip=" "];
  Node237 -> Node238 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node238 [label="safer_sk128_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a75642318b67f93148bdc8d1766626da2",tooltip=" "];
  Node233 -> Node239 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node239 [label="safer_sk64_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a4de4e3591e15db0254e9957e939a77dc",tooltip=" "];
  Node239 -> Node240 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node240 [label="safer_sk64_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$safer_8c.html#a3819b57b564e07b5ade18ec49464b40a",tooltip=" "];
  Node1 -> Node241 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node241 [label="saferp_ecb_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$saferp_8c.html#a14934fc3e8b18abd206c4e900bf9e0d0",tooltip="Decrypts a block of text with LTC_SAFER+."];
  Node241 -> Node242 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node242 [label="saferp_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$saferp_8c.html#a33ce7f7b30a0c6b0a57aff742fb5546b",tooltip="Performs a self-test of the LTC_SAFER+ block cipher."];
  Node1 -> Node243 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node243 [label="saferp_ecb_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$saferp_8c.html#a59d49e6e1a07b020fa94c3f381c314e6",tooltip="Encrypts a block of text with LTC_SAFER+."];
  Node243 -> Node242 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node244 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node244 [label="saferp_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$saferp_8c.html#ac1e881047264199d7629a8792ce8d274",tooltip="Initialize the LTC_SAFER+ block cipher."];
  Node244 -> Node242 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node245 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node245 [label="sha1_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha1_8c.html#a8c33281a2a14e6495eadd36f7a3f277e",tooltip="Terminate the hash to get the digest."];
  Node245 -> Node246 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node246 [label="sha1_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha1_8c.html#a974ff217ba983de0864a96586e9b4b80",tooltip="Self-test the hash."];
  Node1 -> Node247 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node247 [label="sha224_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha224_8c.html#a94aaf81f5c96e00fc5f6cf2332a5bfe1",tooltip="Terminate the hash to get the digest."];
  Node247 -> Node248 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node248 [label="sha224_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha224_8c.html#ad76aa20d487739f22aeb5e576edb978b",tooltip="Self-test the hash."];
  Node1 -> Node249 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 [label="sha256_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha256_8c.html#a53db56f3eb9f35c59b134533be31c301",tooltip="Terminate the hash to get the digest."];
  Node249 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 -> Node250 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node250 [label="_sha256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xsalsa20__test_8c.html#a7fcfbd99a01c14c1da60a10132de39a1",tooltip=" "];
  Node250 -> Node251 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node251 [label="xsalsa20_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xsalsa20__test_8c.html#a3a6ef542e6adb8439f75d3ac042ac0e5",tooltip=" "];
  Node249 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 -> Node247 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node249 -> Node252 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node252 [label="sha256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha256_8c.html#a3a9304ee8cdb3aaa8fc90f0b70592e7b",tooltip="Self-test the hash."];
  Node252 -> Node220 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node253 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node253 [label="sha384_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha384_8c.html#a2541eaa82b2f0359960099fdc33ce0da",tooltip="Terminate the hash to get the digest."];
  Node253 -> Node254 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node254 [label="sha384_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha384_8c.html#a1ac8ac4cbd0dfdfc0e06569ab41ff0d1",tooltip="Self-test the hash."];
  Node1 -> Node255 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node255 [label="sha512_224_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512__224_8c.html#a0cc5bf24c917af4d27c51631b60a1650",tooltip="Terminate the hash to get the digest."];
  Node255 -> Node256 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node256 [label="sha512_224_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512__224_8c.html#ac8368f2476602154ab8dc37d4e749f0b",tooltip="Self-test the hash."];
  Node1 -> Node257 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node257 [label="sha512_256_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512__256_8c.html#a0675093fe7375fc32d628276aaed085e",tooltip="Terminate the hash to get the digest."];
  Node257 -> Node258 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node258 [label="sha512_256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512__256_8c.html#a106417ec8f8933389f03e08a1d33f571",tooltip="Self-test the hash."];
  Node1 -> Node259 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node259 [label="sha512_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512_8c.html#a9c65441270276d7372c48211f89fc9c3",tooltip="Terminate the hash to get the digest."];
  Node259 -> Node253 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node259 -> Node255 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node259 -> Node257 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node259 -> Node260 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node260 [label="sha512_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sha512_8c.html#a206737dab618caebf5c8e56bf93e328a",tooltip="Self-test the hash."];
  Node1 -> Node261 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node261 [label="sober128_add_entropy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sober128_8c.html#a477d801a7eb2e66db6c4c3d7f2db3827",tooltip="Add entropy to the PRNG state."];
  Node261 -> Node262 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node262 [label="sober128_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sober128_8c.html#abd0bdcc3d2a0436f74ab10b0c68fcbca",tooltip="Import a PRNG state."];
  Node262 -> Node263 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node263 [label="sober128_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sober128_8c.html#ae89334392b56e0cb75d493a5bdba60b7",tooltip="PRNG self-test."];
  Node261 -> Node263 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node264 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node264 [label="tiger_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tiger_8c.html#a7d4feae8785f35a28c0bfb1487fca55c",tooltip="Terminate the hash to get the digest."];
  Node264 -> Node265 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node265 [label="tiger_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tiger_8c.html#a0c726827797846b3a94b64983f1b3dad",tooltip="Self-test the hash."];
  Node1 -> Node266 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node266 [label="whirlpool_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$whirl_8c.html#a4da4cb07ed14ccdaa27c3296ad18360a",tooltip="Terminate the hash to get the digest."];
  Node266 -> Node267 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node267 [label="whirlpool_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$whirl_8c.html#ad8036fccf9883ace4c94c9ff33d7d853",tooltip="Self-test the hash."];
  Node1 -> Node268 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node268 [label="whirlpool_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$whirl_8c.html#aa97be69799fe7c84d07a95320c677fbe",tooltip="Initialize the hash state."];
  Node268 -> Node267 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node269 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node269 [label="xcbc_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__done_8c.html#a396b96e5257706bdbc462d17eb3c4276",tooltip="Terminate the XCBC-MAC state."];
  Node269 -> Node270 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 [label="xcbc_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__file_8c.html#ae7e1146329a4421da93ed0590857e232",tooltip="XCBC a file."];
  Node269 -> Node271 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node271 [label="xcbc_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__memory_8c.html#a5b34b1c0334478c5bf640ecce5b12f42",tooltip="XCBC-MAC a block of memory."];
  Node271 -> Node272 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node272 [label="xcbc_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__test_8c.html#a7154e3fde1d58dad1b721962dea2a782",tooltip="Test XCBC-MAC mode Return CRYPT_OK on succes."];
  Node269 -> Node273 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node273 [label="xcbc_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__memory__multi_8c.html#a46c4a78219a0eeaaf8be3f599f8a3bba",tooltip="XCBC multiple blocks of memory."];
  Node1 -> Node270 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node274 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node274 [label="xcbc_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__init_8c.html#a7b787dca2813eeaae1e2ebfd1b601d6d",tooltip="Initialize XCBC-MAC state."];
  Node274 -> Node270 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node274 -> Node271 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node274 -> Node273 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node273 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node275 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node275 [label="xsalsa20_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xsalsa20__setup_8c.html#a974b021979b425374d24f4ce4304ee8c",tooltip="Initialize an XSalsa20 context."];
  Node275 -> Node276 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node276 [label="xsalsa20_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xsalsa20__memory_8c.html#a07c4bf65051eaa8738b55b2e1238be10",tooltip="Encrypt (or decrypt) bytes of ciphertext (or plaintext) with XSalsa20."];
  Node276 -> Node251 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node275 -> Node251 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node277 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node277 [label="xtea_setup",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xtea_8c.html#a08772c5eec26a2bcb83a3ff57d70b22d",tooltip=" "];
  Node277 -> Node278 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node278 [label="xtea_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xtea_8c.html#a97b4884ac816d1f98373dfbc65f9f978",tooltip="Performs a self-test of the LTC_XTEA block cipher."];
  Node1 -> Node278 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node1 -> Node279 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node279 [label="yarrow_read",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$yarrow_8c.html#a5862f58992cc389f85948ae36c89cd72",tooltip="Read from the PRNG."];
  Node1 -> Node280 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node280 [label="yarrow_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$yarrow_8c.html#a4be37aa6e50e66e51a3f0fa0c9fa5ac8",tooltip="Start the PRNG."];
  Node280 -> Node281 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node281 [label="yarrow_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$yarrow_8c.html#aa4abeeec501ff7cc5d002bf2ea495865",tooltip="Import a PRNG state."];
  Node280 -> Node282 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node282 [label="yarrow_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$yarrow_8c.html#a015eaaca3b133390535d3be2fced5cc1",tooltip="PRNG self-test."];
}
