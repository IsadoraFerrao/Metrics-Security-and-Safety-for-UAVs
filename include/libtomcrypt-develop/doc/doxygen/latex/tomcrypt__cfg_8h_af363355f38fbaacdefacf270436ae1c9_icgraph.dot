digraph "XMALLOC"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node270 [label="XMALLOC",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node270 -> Node271 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node271 [label="_dsa_make_params",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__generate__pqg_8c.html#ad38793673d78a4d45177d5b839e1e16b",tooltip="Create DSA parameters (INTERNAL ONLY, not part of public API)"];
  Node271 -> Node272 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node272 [label="dsa_generate_pqg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__generate__pqg_8c.html#aa25c2f74420daea058431d3ad4b2340d",tooltip="Generate DSA parameters p, q & g."];
  Node272 -> Node273 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node273 [label="dsa_make_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__make__key_8c.html#a9b48ea999f1e23e839ae5b62aab985c6",tooltip="Old-style creation of a DSA key."];
  Node270 -> Node274 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node274 [label="_pkcs_12_wrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pbes1_8c.html#a5ef636c0a0791cbb9e9f179bbf82f157",tooltip=" "];
  Node270 -> Node275 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node275 [label="_pkcs_5_alg1_common",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#aa4612634ecf7147a57dfe724150e059a",tooltip="Execute PKCS #5 v1 in strict or OpenSSL EVP_BytesToKey()-compat mode."];
  Node275 -> Node276 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node276 [label="pkcs_5_alg1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#ad4834c485adb4fc776af355582a96cb6",tooltip="Execute PKCS #5 v1 - Strict mode (no OpenSSL-compatible extension)"];
  Node276 -> Node277 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node277 [label="_pkcs_5_alg1_wrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pbes1_8c.html#a24bb0a681a92f4c5c6b0b10b55bd825e",tooltip=" "];
  Node276 -> Node278 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node278 [label="pkcs_5_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__test_8c.html#a1a78c0bca3595115dd9272c2026b607e",tooltip="PKCS #5 self-test."];
  Node275 -> Node279 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node279 [label="pkcs_5_alg1_openssl",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__1_8c.html#ac6e1537b6861bbd16dff1469982277f1",tooltip="Execute PKCS #5 v1 - OpenSSL-extension-compatible mode."];
  Node279 -> Node278 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node280 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node280 [label="blake2bmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2bmac__file_8c.html#a372c957a4b186ee3a6f737eacfd0b9b3",tooltip="BLAKE2B MAC a file."];
  Node270 -> Node281 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node281 [label="blake2smac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$blake2smac__file_8c.html#abc529c6de44b41397be3a1d166d9a7ba",tooltip="BLAKE2S MAC a file."];
  Node270 -> Node282 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node282 [label="ccm_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ccm__memory_8c.html#acdd7923e6aee8984662ed5000dc2d7fe",tooltip="CCM encrypt/decrypt and produce an authentication tag."];
  Node282 -> Node283 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node283 [label="ccm_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ccm__test_8c.html#af02fbfac6da1b71a49ad14537796b006",tooltip=" "];
  Node270 -> Node284 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node284 [label="chc_compress",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#ab3ddd709c120ad803c832dd2660dc650",tooltip=" "];
  Node284 -> Node285 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node285 [label="chc_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#a6c643b9e5929a5ce3426410fd4eceb59",tooltip="Terminate the hash to get the digest."];
  Node285 -> Node286 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node286 [label="chc_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#a1467e832993ba079f27160687745fdcd",tooltip="Self-test the hash."];
  Node270 -> Node287 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node287 [label="chc_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chc_8c.html#aa2b49244a7f42e648b80c07e443b31c7",tooltip="Initialize the hash state."];
  Node287 -> Node286 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node288 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node288 [label="der_decode_custom_type_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__custom__type_8c.html#aaa3acc13042e5d9244ac279a354775fe",tooltip="Extended-decode a Custom type."];
  Node288 -> Node289 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node289 [label="der_decode_custom_type",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__custom__type_8c.html#a698f6c64586707819ebd6f90a14264e8",tooltip="Decode a Custom type."];
  Node289 -> Node290 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node290 [label="der_decode_choice",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__choice_8c.html#abbc3f8406cbf0c2d75b1c801192dcad4",tooltip="Decode a CHOICE."];
  Node290 -> Node288 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node289 -> Node288 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node288 -> Node291 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node291 [label="der_decode_sequence_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__sequence__ex_8c.html#a388cbc3f5c404637bc51f9dfb2d4f677",tooltip="Decode a SEQUENCE."];
  Node291 -> Node288 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node291 -> Node292 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node292 [label="_der_decode_sequence_va",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__sequence__multi_8c.html#a1c505b541a0ed6ddcdccc8ddcef9ed9e",tooltip="Decode a SEQUENCE type using a VA list."];
  Node292 -> Node293 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node293 [label="der_decode_sequence\l_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__sequence__multi_8c.html#a6d86b670c8f3801b0fe6e2cd544df678",tooltip="Decode a SEQUENCE type using a VA list."];
  Node293 -> Node294 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node294 [label="dh_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dh__import_8c.html#aeae7c65a0d0671f62d259baa98160874",tooltip="Import a DH key from a binary packet."];
  Node293 -> Node295 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node295 [label="dh_set_pg_dhparam",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dh__set__pg__dhparam_8c.html#a442807cd759a5df755d184f894be3fe3",tooltip="Import DH key parts p and g from dhparam."];
  Node293 -> Node296 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node296 [label="dsa_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__import_8c.html#ab814d8871b40e7f60c3ed6a16990dac2",tooltip="Import a DSA key."];
  Node293 -> Node297 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node297 [label="dsa_set_pqg_dsaparam",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__set__pqg__dsaparam_8c.html#a81296ca7f683d91e0bf24c2b747044e4",tooltip="Import DSA's p, q & g from dsaparam."];
  Node293 -> Node298 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node298 [label="ecc_import_ex",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$ecc__import_8c.html#ab9bceabc3a4d16f6b714325ac383e024",tooltip="Import an ECC key from a binary packet, using user supplied domain params rather than one of the NIST..."];
  Node293 -> Node300 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node300 [label="rsa_import",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__import_8c.html#aa80aefb08a282afe02c308cc19879d05",tooltip="Import an RSAPublicKey or RSAPrivateKey [two-prime only, only support >= 1024-bit keys,..."];
  Node293 -> Node301 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node301 [label="rsa_import_pkcs8",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__import__pkcs8_8c.html#a3d44c6233a326316f7fb01c9d834fad4",tooltip="Import an RSAPublicKey or RSAPrivateKey in PKCS#8 format."];
  Node293 -> Node302 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node302 [label="rsa_import_x509",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__import__x509_8c.html#af7fd232bdc803e8d3f8a109dc171110d",tooltip="Import an RSA key from a X.509 certificate."];
  Node292 -> Node303 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node303 [label="der_decode_sequence\l_multi_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__sequence__multi_8c.html#ab5141cf36663054d9ec6e46ed6909fce",tooltip="Decode a SEQUENCE type using a VA list."];
  Node303 -> Node304 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node304 [label="ecc_recover_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__recover__key_8c.html#a42d1c0f03dd10a8ea98836bab2c1e6c6",tooltip="Recover ECC public key from signature and hash."];
  Node303 -> Node305 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node305 [label="ecc_verify_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__verify__hash_8c.html#a6c4f6d0c99e8dbcff4e1064179f20214",tooltip="Verify an ECC signature in RFC7518 format."];
  Node270 -> Node306 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node306 [label="der_decode_sequence\l_flexi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$der__decode__sequence__flexi_8c.html#acec68888a6eae3b64f54b37cfb43d9b1",tooltip="ASN.1 DER Flexi(ble) decoder will decode arbitrary DER packets and create a linked list of the decode..."];
  Node306 -> Node307 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node307 [label="pkcs8_decode_flexi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs8__decode__flexi_8c.html#a1b0d8fcf234d94638b2554ccea725003",tooltip="PKCS#8 decrypt if necessary & flexi-decode."];
  Node307 -> Node308 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node308 [label="ecc_import_pkcs8",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__import__pkcs8_8c.html#a0f0e747f119685eee3cc412f4480c52e",tooltip=" "];
  Node307 -> Node301 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node306 -> Node308 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node306 -> Node309 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node309 [label="ecc_import_x509",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__import__x509_8c.html#abd7477bc1144cdfd4f9e2da835eefbf6",tooltip="Import an ECC key from a X.509 certificate."];
  Node306 -> Node302 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node310 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node310 [label="dh_generate_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dh__generate__key_8c.html#ab1d01a4bd250336b21aff7a863d785de",tooltip=" "];
  Node270 -> Node311 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node311 [label="dsa_decrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__decrypt__key_8c.html#a6f80d854fbdd56020ea641c4e4e47a4c",tooltip="Decrypt an DSA encrypted key."];
  Node270 -> Node312 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node312 [label="dsa_encrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__encrypt__key_8c.html#ab65138d407e0660f6f2f7cb7e7dcb24b",tooltip="Encrypt a symmetric key with DSA."];
  Node270 -> Node313 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node313 [label="dsa_export",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__export_8c.html#a96a11be728dca36ee58330749ec058e2",tooltip="Export a DSA key to a binary packet."];
  Node270 -> Node314 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node314 [label="dsa_sign_hash_raw",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__sign__hash_8c.html#a1073fec547694360cd9f2a3d81c7260a",tooltip="Sign a hash with DSA."];
  Node314 -> Node315 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node315 [label="dsa_sign_hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dsa__sign__hash_8c.html#a83c6d4c1243acbc906e872e20de3bba2",tooltip="Sign a hash with DSA."];
  Node270 -> Node316 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node316 [label="eax_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__decrypt__verify__memory_8c.html#ab4d3f7a8561cc2cbce16949a1ee0d00c",tooltip="Decrypt a block of memory and verify the provided MAC tag with EAX."];
  Node316 -> Node317 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node317 [label="eax_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__test_8c.html#a9e708c531b1c375a3d086f43a192c455",tooltip="Test the EAX implementation."];
  Node270 -> Node318 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node318 [label="eax_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__done_8c.html#ad8e287fe7144dae9e4eac1e755d973cf",tooltip="Terminate an EAX session and get the tag."];
  Node318 -> Node316 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node318 -> Node319 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node319 [label="eax_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__encrypt__authenticate__memory_8c.html#ae398a749e5591537487ab93b4a9fec24",tooltip="EAX encrypt and produce an authentication tag."];
  Node319 -> Node317 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node319 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node320 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node320 [label="eax_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$eax__init_8c.html#ac35fd0cc9f76c2e8052efb3c22f1559c",tooltip="Initialized an EAX state."];
  Node320 -> Node316 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node320 -> Node319 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node321 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node321 [label="ecc_decrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__decrypt__key_8c.html#adfbc21632ec24dad838fa0700154a57d",tooltip="Decrypt an ECC encrypted key."];
  Node270 -> Node322 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node322 [label="ecc_encrypt_key",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ecc__encrypt__key_8c.html#a16164f1e295b1c88e6b81a9ece26cd70",tooltip="Encrypt a symmetric key with ECC."];
  Node270 -> Node323 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node323 [label="f9_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__file_8c.html#a4c1ea12d1c638f066c93908a118ec404",tooltip="f9 a file"];
  Node270 -> Node324 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node324 [label="f9_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$f9__memory__multi_8c.html#a6d3cc7c6511a0e33997084a56a7f191f",tooltip="f9 multiple blocks of memory"];
  Node270 -> Node325 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node325 [label="gcm_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__memory_8c.html#a43d9862e1013606d01bab2c57fef74f5",tooltip="Process an entire GCM packet in one call."];
  Node325 -> Node326 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node326 [label="gcm_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gcm__test_8c.html#ae36c8eb6c2964df7e386f5f73bded5e7",tooltip="Test the GCM code."];
  Node270 -> Node327 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node327 [label="hash_filehandle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a55d0344508460fbde2c17fe9ef2aa838",tooltip="Hash data from an open file handle."];
  Node327 -> Node328 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node328 [label="hash_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a6107c14266137a8f7834e4318d8d5002",tooltip=" "];
  Node270 -> Node329 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 [label="hash_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a8672bf28488595ef1519a6754498869c",tooltip="Hash a block of memory and store the digest."];
  Node329 -> Node330 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node330 [label="hmac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__init_8c.html#a84fb451315a01f33d356ddd1ade0dca9",tooltip="Initialize an HMAC context."];
  Node330 -> Node331 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node331 [label="hmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__file_8c.html#a61c2b2aeca9a287224c20e7fceff11cd",tooltip="HMAC a file."];
  Node330 -> Node332 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node332 [label="hmac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__memory_8c.html#a6bf2dff4537e6332dec46266a9db7580",tooltip="HMAC a block of memory to produce the authentication tag."];
  Node332 -> Node333 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node333 [label="hmac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__test_8c.html#af43c4e10ec1984cf428cf69cd3184e53",tooltip="HMAC self-test."];
  Node332 -> Node334 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node334 [label="hkdf_extract",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hkdf_8c.html#a6af77e2823d3b6e691098963b07ea26a",tooltip=" "];
  Node334 -> Node335 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node335 [label="hkdf",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$hkdf_8c.html#ac79c8ae04bc15c69e9704277e38d22be",tooltip=" "];
  Node332 -> Node337 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node337 [label="hkdf_expand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hkdf_8c.html#a1fa3c2a1e44fc629a059ae5c61cc0197",tooltip=" "];
  Node337 -> Node335 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node332 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node338 [label="pkcs_5_alg2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__5__2_8c.html#a738b05376774b9a5b311a59ec73966f0",tooltip="Execute PKCS #5 v2."];
  Node338 -> Node278 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node330 -> Node339 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node339 [label="hmac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__memory__multi_8c.html#a42b0c424c7e01653550dc7d9ac3bb4b9",tooltip="HMAC multiple blocks of memory to produce the authentication tag."];
  Node330 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node340 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node340 [label="pkcs12_kdf",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs12__kdf_8c.html#a362c9fba9251fa6d35445f4ccae24fe8",tooltip=" "];
  Node340 -> Node274 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node275 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node311 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node312 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node271 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node321 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node322 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node329 -> Node341 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node341 [label="pkcs_1_oaep_decode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__oaep__decode_8c.html#ab51588072c388a0deb0e0a2086b226f7",tooltip="PKCS #1 v2.00 OAEP decode."];
  Node341 -> Node342 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node342 [label="rsa_decrypt_key_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__decrypt__key_8c.html#a9d043dc2d91a5ca83f64a4210b03f5d1",tooltip="PKCS #1 decrypt then v1.5 or OAEP depad."];
  Node329 -> Node343 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node343 [label="pkcs_1_oaep_encode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__oaep__encode_8c.html#a503852f9d2f39632d8a09117c19afe8b",tooltip="PKCS #1 v2.00 OAEP encode."];
  Node343 -> Node344 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node344 [label="rsa_encrypt_key_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__encrypt__key_8c.html#af3112ec74c217e4bbd5e9609bc83393f",tooltip="(PKCS #1 v2.0) OAEP pad then encrypt"];
  Node270 -> Node345 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node345 [label="hash_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$tomcrypt__hash_8h.html#a85566393d0f13710bafc9501361eff06",tooltip="Hash multiple (non-adjacent) blocks of memory at once."];
  Node345 -> Node340 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node335 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node337 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node346 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node346 [label="hmac_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hmac__done_8c.html#a25eaf3db04e6464adbba95d1153885d3",tooltip="Terminate an HMAC session."];
  Node346 -> Node331 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node346 -> Node332 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node346 -> Node339 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node346 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node331 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node330 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node332 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node339 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node347 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node347 [label="ocb3_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__decrypt__verify__memory_8c.html#aaa794cde472d6ae35c5d0cf68842860d",tooltip="Decrypt and compare the tag with OCB."];
  Node347 -> Node348 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node348 [label="ocb3_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__test_8c.html#afafd01785264b534d0ef8efb9fe530ef",tooltip="Test the OCB protocol."];
  Node270 -> Node349 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node349 [label="ocb3_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb3__encrypt__authenticate__memory_8c.html#a4f2509ac5594dc6dcead8ac840a30b91",tooltip="Encrypt and generate an authentication code for a buffer of memory."];
  Node349 -> Node348 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node350 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node350 [label="ocb_decrypt_verify\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__decrypt__verify__memory_8c.html#a54a8c51becc57a9eded7c6da4479ac10",tooltip="Decrypt and compare the tag with OCB."];
  Node350 -> Node351 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node351 [label="ocb_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__test_8c.html#afbc7c6139aaabac9146afff688bafbb9",tooltip="Test the OCB protocol."];
  Node270 -> Node352 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node352 [label="ocb_done_decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__done__decrypt_8c.html#a9f8c7f1d6dd8025f8b4375841707a096",tooltip="Terminate a decrypting OCB state."];
  Node352 -> Node350 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node353 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node353 [label="ocb_encrypt_authenticate\l_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__encrypt__authenticate__memory_8c.html#a6dc818f74acf81f66cd2f25b5f0024b6",tooltip="Encrypt and generate an authentication code for a buffer of memory."];
  Node353 -> Node351 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node354 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node354 [label="omac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__file_8c.html#ae07518003313f8328d564265c4d0c8d4",tooltip="OMAC a file."];
  Node270 -> Node355 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node355 [label="omac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__memory_8c.html#a22ca5d123fefe8922e9491f5a0e122a2",tooltip="OMAC a block of memory."];
  Node355 -> Node356 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node356 [label="omac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__test_8c.html#abdcfbca1800d6a3b577b7c6ec0838a48",tooltip="Test the OMAC setup."];
  Node270 -> Node357 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node357 [label="omac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$omac__memory__multi_8c.html#a85ff42c47901f5e541ab842f92e09895",tooltip="OMAC multiple blocks of memory."];
  Node270 -> Node358 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node358 [label="pelican_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pelican__memory_8c.html#a1c9283f981146b34e1f61fd18840d6f7",tooltip="Pelican block of memory."];
  Node270 -> Node340 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node307 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node359 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node359 [label="pkcs_1_mgf1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__mgf1_8c.html#a5b7fcf55a6c826c06e0e99f59ef2c6f8",tooltip="Perform PKCS #1 MGF1 (internal)"];
  Node359 -> Node341 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node359 -> Node343 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node359 -> Node360 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node360 [label="pkcs_1_pss_decode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__pss__decode_8c.html#a6aeacecd6b979acc2da875337f08eacc",tooltip="PKCS #1 v2.00 PSS decode."];
  Node360 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node361 [label="rsa_verify_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__verify__hash_8c.html#af3e9ec6fff93de785cd2528f5b295ca2",tooltip="PKCS #1 de-sign then v1.5 or PSS depad."];
  Node359 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node362 [label="pkcs_1_pss_encode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pkcs__1__pss__encode_8c.html#abdc082e173b453ec37edabbc8f69aa39",tooltip="PKCS #1 v2.00 Signature Encoding."];
  Node362 -> Node363 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node363 [label="rsa_sign_hash_ex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__sign__hash_8c.html#a7a07f13dda380b3a3545a07047195ecd",tooltip="PKCS #1 pad then sign."];
  Node270 -> Node341 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node343 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node360 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node338 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node364 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node364 [label="pmac_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__file_8c.html#ad75fb94bd003732c44d943868d583547",tooltip="PMAC a file."];
  Node270 -> Node365 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node365 [label="pmac_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__init_8c.html#a2cc36e2064ee6f365143f6f51083de9a",tooltip="Initialize a PMAC state."];
  Node365 -> Node364 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node365 -> Node366 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node366 [label="pmac_memory",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__memory_8c.html#ac738727243b64548af367c19dfee535c",tooltip="PMAC a block of memory."];
  Node366 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node367 [label="pmac_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__test_8c.html#a25c3fac912755621e400e5b51f46ca23",tooltip="Test the LTC_OMAC implementation."];
  Node365 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node368 [label="pmac_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$pmac__memory__multi_8c.html#a1de02e9aa8851625d40265b30c639369",tooltip="PMAC multiple blocks of memory."];
  Node270 -> Node366 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node369 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node369 [label="poly1305_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$poly1305__file_8c.html#aca704db89279fb2fbe2998b5c7fbf9d4",tooltip="POLY1305 a file."];
  Node270 -> Node370 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node370 [label="read_radix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$gmp__desc_8c.html#af84d5b7caaf005f40f924afd8ada2380",tooltip=" "];
  Node270 -> Node371 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node371 [label="rng_make_prng",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rng__make__prng_8c.html#a97e605483ea5f5f9ea4067dafae5801b",tooltip="Create a PRNG from a RNG."];
  Node270 -> Node342 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node372 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node372 [label="rsa_export",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rsa__export_8c.html#ab097894ad63ca98064d5be945b5efc6d",tooltip="This will export either an RSAPublicKey or RSAPrivateKey [defined in PKCS #1 v2.1]."];
  Node270 -> Node301 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node363 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node373 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node373 [label="s_ocb_done",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$s__ocb__done_8c.html#a0e6dd21746be44a0949d16b9e1ac796d",tooltip="Shared code to finish an OCB stream."];
  Node373 -> Node352 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node373 -> Node374 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node374 [label="ocb_done_encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ocb__done__encrypt_8c.html#aab90ede8c55c4f4a167a26dd2095556e",tooltip="Terminate an encryption OCB state."];
  Node374 -> Node353 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node270 -> Node375 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node375 [label="xcbc_file",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__file_8c.html#ae7e1146329a4421da93ed0590857e232",tooltip="XCBC a file."];
  Node270 -> Node376 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node376 [label="xcbc_memory_multi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$xcbc__memory__multi_8c.html#a46c4a78219a0eeaaf8be3f599f8a3bba",tooltip="XCBC multiple blocks of memory."];
}
